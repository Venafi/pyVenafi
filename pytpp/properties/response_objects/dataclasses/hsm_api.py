from datetime import datetime
from pytpp.properties.response_objects.dataclasses._base import PayloadModel, PayloadField


class Certificate(PayloadModel):
    authentication: str = PayloadField(alias='Authentication')
    check_value: str = PayloadField(alias='CheckValue')
    created_on: datetime = PayloadField(alias='CreatedOn')
    encipherment: bool = PayloadField(alias='Encipherment')
    end_date: datetime = PayloadField(alias='EndDate')
    environment_type: int = PayloadField(alias='EnvironmentType')
    handle: int = PayloadField(alias='Handle')
    id: int = PayloadField(alias='Id')
    issuer: str = PayloadField(alias='Issuer')
    key_context: str = PayloadField(alias='KeyContext')
    key_id: str = PayloadField(alias='KeyId')
    label: str = PayloadField(alias='Label')
    object_type: int = PayloadField(alias='ObjectType')
    signing: bool = PayloadField(alias='Signing')
    start_date: datetime = PayloadField(alias='StartDate')
    subject: str = PayloadField(alias='Subject')
    token: bool = PayloadField(alias='Token')
    trusted: bool = PayloadField(alias='Trusted')
    value: str = PayloadField(alias='Value')


class PrivateKey(PayloadModel):
    authentication: bool = PayloadField(alias='Authentication')
    created_on: datetime = PayloadField(alias='CreatedOn')
    curve: str = PayloadField(alias='Curve')
    decrypt: bool = PayloadField(alias='Decrypt')
    encipherment: bool = PayloadField(alias='Encipherment')
    environment_type: int = PayloadField(alias='EnvironmentType')
    exponent: str = PayloadField(alias='Exponent')
    handle: int = PayloadField(alias='Handle')
    id: str = PayloadField(alias='Id')
    key_context: str = PayloadField(alias='KeyContext')
    key_id: str = PayloadField(alias='KeyId')
    key_type: str = PayloadField(alias='KeyType')
    label: str = PayloadField(alias='Label')
    modulus: str = PayloadField(alias='Modulus')
    object_type: int = PayloadField(alias='ObjectType')
    params: str = PayloadField(alias='Params')
    private: bool = PayloadField(alias='Private')
    sign: bool = PayloadField(alias='Sign')
    signing: bool = PayloadField(alias='Signing')
    token: bool = PayloadField(alias='Token')
    unwrap: bool = PayloadField(alias='Unwrap')


class PublicKey(PayloadModel):
    authentication: bool = PayloadField(alias='Authentication')
    bits: str = PayloadField(alias='Bits')
    created_on: datetime = PayloadField(alias='CreatedOn')
    curve: str = PayloadField(alias='Curve')
    ec_point: str = PayloadField(alias='ECPoint')
    encipherment: bool = PayloadField(alias='Encipherment')
    encrypt: str = PayloadField(alias='Encrypt')
    environment_type: int = PayloadField(alias='EnvironmentType')
    exponent: str = PayloadField(alias='Exponent')
    handle: int = PayloadField(alias='Handle')
    id: str = PayloadField(alias='Id')
    key_context: str = PayloadField(alias='KeyContext')
    key_id: str = PayloadField(alias='KeyId')
    key_type: str = PayloadField(alias='KeyType')
    label: str = PayloadField(alias='Label')
    modulus: str = PayloadField(alias='Modulus')
    object_type: int = PayloadField(alias='ObjectType')
    params: str = PayloadField(alias='Params')
    signing: bool = PayloadField(alias='Signing')
    token: bool = PayloadField(alias='Token')
    verify: str = PayloadField(alias='Verify')
    wrap: str = PayloadField(alias='Wrap')
